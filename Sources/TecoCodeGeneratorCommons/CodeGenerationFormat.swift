//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// This source file was part of the Swift.org open source project
//
// Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

import SwiftBasicFormat
import SwiftSyntax

/// A format style for files generated by TecoCodeGenerator.
public class CodeGenerationFormat: BasicFormat {
    public override var indentation: TriviaPiece { .spaces(indentationLevel * 4) }

    public override func visit(_ node: MemberDeclListItemSyntax) -> MemberDeclListItemSyntax {
        if node.decl.is(EnumCaseDeclSyntax.self) == true || node.indexInParent == 0 {
            return super.visit(node)
        } else {
            let formatted = super.visit(node)
            return formatted.withLeadingTrivia(indentedNewline + (formatted.leadingTrivia ?? []))
        }
    }

    public override func visit(_ node: CodeBlockItemSyntax) -> CodeBlockItemSyntax {
        if node.parent?.parent?.is(SourceFileSyntax.self) == true, !node.item.is(ImportDeclSyntax.self) {
            let formatted = super.visit(node)
            return formatted.withLeadingTrivia(indentedNewline + (formatted.leadingTrivia ?? []))
        } else {
            return super.visit(node)
        }
    }
}
